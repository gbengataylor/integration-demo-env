apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    certified: 'false'
    olm.targetNamespaces: microcks-demo
    operatorframework.io/properties: >-
      {"properties":[{"type":"olm.gvk","value":{"group":"microcks.github.io","kind":"MicrocksInstall","version":"v1alpha1"}},{"type":"olm.package","value":{"packageName":"microcks","version":"1.4.1"}}]}
    repository: 'https://github.com/microcks/microcks-ansible-operator'
    support: microcks.github.io
    alm-examples: |-
      [
        {
          "apiVersion": "microcks.github.io/v1alpha1",
          "kind": "MicrocksInstall",
          "metadata": {
            "name": "my-microcksinstall"
          },
          "spec": {
            "name": "my-microcksinstall",
            "version": "1.4.1",
            "microcks": {
              "replicas": 1
            },
            "postman": {
              "replicas": 1
            },
            "keycloak": {
              "install": true,
              "persistent": true,
              "volumeSize": "1Gi"
            },
            "mongodb": {
              "install": true,
              "persistent": true,
              "volumeSize": "2Gi"
            }
          }
        },
        {
          "apiVersion": "microcks.github.io/v1alpha1",
          "kind": "MicrocksInstall",
          "metadata": {
            "name": "my-microcksinstall-minikube"
          },
          "spec": {
            "name": "my-microcksinstall-minikube",
            "version": "1.4.1",
            "microcks": {
              "replicas": 2,
              "url": "microcks.192.168.99.100.nip.io"
            },
            "postman": {
              "replicas": 2
            },
            "keycloak": {
              "install": true,
              "persistent": true,
              "volumeSize": "1Gi",
              "url": "keycloak.192.168.99.100.nip.io"
            },
            "mongodb": {
              "install": true,
              "persistent": true,
              "volumeSize": "2Gi"
            }
          }
        }
      ]
    capabilities: Seamless Upgrades
    olm.operatorNamespace: microcks-demo
    containerImage: 'quay.io/microcks/microcks-ansible-operator:1.4.1'
    createdAt: '2021-08-28T18:26:56Z'
    categories: Integration & Delivery
    description: Open Source mocking and testing platform for API and microservices
    olm.operatorGroup: microcks-operator-group
  selfLink: >-
    /apis/operators.coreos.com/v1alpha1/namespaces/microcks-demo/clusterserviceversions/microcks-operator.v1.4.1
  resourceVersion: '100254'
  name: microcks-operator.v1.4.1
  uid: 7285c056-6071-4253-9a23-c3d452123c18
  creationTimestamp: '2021-10-29T17:08:33Z'
  generation: 1
  managedFields:
    - apiVersion: operators.coreos.com/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:createdAt': {}
            'f:alm-examples': {}
            'f:description': {}
            'f:capabilities': {}
            .: {}
            'f:containerImage': {}
            'f:categories': {}
            'f:certified': {}
            'f:operatorframework.io/properties': {}
            'f:support': {}
            'f:repository': {}
        'f:spec':
          'f:version': {}
          'f:maturity': {}
          'f:provider':
            .: {}
            'f:name': {}
          'f:links': {}
          'f:install':
            .: {}
            'f:spec':
              .: {}
              'f:permissions': {}
            'f:strategy': {}
          'f:maintainers': {}
          'f:description': {}
          'f:installModes': {}
          'f:icon': {}
          'f:customresourcedefinitions':
            .: {}
            'f:owned': {}
          .: {}
          'f:apiservicedefinitions': {}
          'f:selector':
            .: {}
            'f:matchLabels':
              .: {}
              'f:name': {}
          'f:replaces': {}
          'f:labels':
            .: {}
            'f:name': {}
          'f:displayName': {}
          'f:keywords': {}
      manager: catalog
      operation: Update
      time: '2021-10-29T17:08:33Z'
    - apiVersion: operators.coreos.com/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:olm.operatorGroup': {}
            'f:olm.operatorNamespace': {}
            'f:olm.targetNamespaces': {}
          'f:labels':
            .: {}
            'f:olm.api.88e0c4db206e3309': {}
            'f:operators.coreos.com/microcks.microcks-demo': {}
        'f:spec':
          'f:install':
            'f:spec':
              'f:deployments': {}
        'f:status':
          .: {}
          'f:conditions': {}
          'f:lastTransitionTime': {}
          'f:lastUpdateTime': {}
          'f:message': {}
          'f:phase': {}
          'f:reason': {}
          'f:requirementStatus': {}
      manager: olm
      operation: Update
      time: '2021-10-29T17:08:34Z'
  namespace: microcks-demo
  labels:
    olm.api.88e0c4db206e3309: provided
    operators.coreos.com/microcks.microcks-demo: ''
spec:
  customresourcedefinitions:
    owned:
      - description: Represents a Microcks installation
        displayName: MicrocksInstall
        kind: MicrocksInstall
        name: microcksinstalls.microcks.github.io
        resources:
          - kind: Service
            name: ''
            version: v1
          - kind: Deployment
            name: ''
            version: v1
          - kind: Pod
            name: ''
            version: v1
          - kind: ConfigMap
            name: ''
            version: v1
          - kind: Secret
            name: ''
            version: v1
          - kind: PersistentVolumeClaim
            name: ''
            version: v1
        specDescriptors:
          - description: Name of your MicrocksInstall
            displayName: Name
            path: name
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:label'
          - description: Version of Microcks to install
            displayName: Version
            path: version
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:label'
        version: v1alpha1
  apiservicedefinitions: {}
  keywords:
    - mock
    - test
    - API
    - microservice
  displayName: Microcks Operator
  provider:
    name: Microcks.io
  maturity: alpha
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
  version: 1.4.1
  icon:
    - base64data: >-
        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
      mediatype: image/png
  links:
    - name: Product Page
      url: 'https://microcks.io'
    - name: Microcks Operator Source Code
      url: 'https://github.com/microcks/microcks-ansible-operator'
  install:
    spec:
      deployments:
        - name: microcks-ansible-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: microcks-ansible-operator
            strategy: {}
            template:
              metadata:
                creationTimestamp: null
                labels:
                  name: microcks-ansible-operator
              spec:
                containers:
                  - env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: 'metadata.annotations[''olm.targetNamespaces'']'
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: microcks-ansible-operator
                    image: 'quay.io/microcks/microcks-ansible-operator:1.4.1'
                    imagePullPolicy: Always
                    name: microcks-ansible-operator
                    resources: {}
                serviceAccountName: microcks-ansible-operator
      permissions:
        - rules:
            - apiGroups:
                - ''
              resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
              verbs:
                - '*'
            - apiGroups:
                - ''
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
              verbs:
                - '*'
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - '*'
            - apiGroups:
                - route.openshift.io
              resources:
                - routes/custom-host
              verbs:
                - create
            - apiGroups:
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - '*'
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - kafka.strimzi.io
              resources:
                - kafkas
                - kafkatopics
              verbs:
                - '*'
            - apiGroups:
                - microcks.github.io
              resources:
                - '*'
              verbs:
                - '*'
          serviceAccountName: microcks-ansible-operator
    strategy: deployment
  maintainers:
    - email: laurent.broudoux@gmail.com
      name: lbroudoux
  description: >
    Microcks is an Open source tool for API and microservices mocking and
    testing. It provides a platform for referencing, deploying mocks and allow
    contract-testing of your APIs. It can also be considered as a Service
    Virtualization solution because it will allow you to provide fake API or
    Service implementation before development being actually done. It supports
    Async APIs, REST APIs, gRPC and SOAP WebServices. It perfectly integrates
    into an iterative, contract-first delivery process.

    Microcks tries not reinventing the wheel and let you capitalize on already
    known tools of standards. It supports [AsyncAPI
    Specifications](https://asyncapi.com), [OpenAPI
    Specification](https://www.openapis.org/) `3.x` out-of-the-box and can also
    relies on popular tools like [SoapUI](http://www.soapui.com) or
    [Postman](http://www.getpostman.io) to edit your API request / response
    samples as well as your test scripts.

    ### Operator features

    * **Create/Destroy**: Easily launch Microcks installations
    (`MicrocksInstall` custom resource) for your Kubernetes namespace

    ### MicrocksInstall options

    * **keycloak** component can be deployed as part of the install or you can
    reuse an existing instance. You can reference an existing `Secret` for
    providing TLS certificates for securing the `Ingress`,

    * **mongodb** component can be deployed as part of the install or you can
    reuse an existing instance, You can reference an existing `Secret` for
    providing connection credentials,

    * **features** component allow to activate optional features like the
    mocking of AsyncAPIs. In case you turn `features.async.enabled` to `true`
    and `features.async.kafka.install` to `true`, you must have the [Strimzi
    Operator](https://operatorhub.io/operator/strimzi-kafka-operator) already
    installed on your cluster/namespace.

    ### Documentation

    Documentation to the current _master_ branch as well as all releases can be
    found on our
    [GitHub](https://github.com/microcks/microcks-ansible-operator).

    ### License

    Microcks is licensed under the [Apache License, Version
    2.0](https://github.com/microcks/microcks/blob/master/LICENSE).
  replaces: microcks-operator.v1.3.0
  selector:
    matchLabels:
      name: microcks-operator
  labels:
    name: microcks-operator
status:
  conditions:
    - lastTransitionTime: '2021-10-29T17:08:33Z'
      lastUpdateTime: '2021-10-29T17:08:33Z'
      message: requirements not yet checked
      phase: Pending
      reason: RequirementsUnknown
    - lastTransitionTime: '2021-10-29T17:08:33Z'
      lastUpdateTime: '2021-10-29T17:08:33Z'
      message: 'all requirements found, attempting install'
      phase: InstallReady
      reason: AllRequirementsMet
    - lastTransitionTime: '2021-10-29T17:08:33Z'
      lastUpdateTime: '2021-10-29T17:08:33Z'
      message: waiting for install components to report healthy
      phase: Installing
      reason: InstallSucceeded
    - lastTransitionTime: '2021-10-29T17:08:33Z'
      lastUpdateTime: '2021-10-29T17:08:33Z'
      message: >-
        installing: waiting for deployment microcks-ansible-operator to become
        ready: waiting for spec update of deployment "microcks-ansible-operator"
        to be observed...
      phase: Installing
      reason: InstallWaiting
    - lastTransitionTime: '2021-10-29T17:08:46Z'
      lastUpdateTime: '2021-10-29T17:08:46Z'
      message: install strategy completed with no errors
      phase: Succeeded
      reason: InstallSucceeded
  lastTransitionTime: '2021-10-29T17:08:46Z'
  lastUpdateTime: '2021-10-29T17:08:46Z'
  message: install strategy completed with no errors
  phase: Succeeded
  reason: InstallSucceeded
  requirementStatus:
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: microcksinstalls.microcks.github.io
      status: Present
      uuid: 0851b4f2-05e6-4530-b53f-c15004af962c
      version: v1
    - dependents:
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["*"],"apiGroups":[""],"resources":["pods","services","endpoints","persistentvolumeclaims","events","configmaps","secrets"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get"],"apiGroups":[""],"resources":["namespaces"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["*"],"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["*"],"apiGroups":["route.openshift.io"],"resources":["routes"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["create"],"apiGroups":["route.openshift.io"],"resources":["routes/custom-host"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["*"],"apiGroups":["networking.k8s.io"],"resources":["ingresses"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","create"],"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["*"],"apiGroups":["kafka.strimzi.io"],"resources":["kafkas","kafkatopics"]}
          status: Satisfied
          version: v1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["*"],"apiGroups":["microcks.github.io"],"resources":["*"]}
          status: Satisfied
          version: v1
      group: ''
      kind: ServiceAccount
      message: ''
      name: microcks-ansible-operator
      status: Present
      version: v1
