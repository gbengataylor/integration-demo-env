apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    certified: 'false'
    olm.targetNamespaces: fuseonline
    repository: 'https://github.com/syndesisio/syndesis/'
    support: Syndesis
    alm-examples: |
      [{
          "apiVersion": "syndesis.io/v1beta1",
          "kind": "Syndesis",
          "metadata": {
            "name": "app"
          },
          "spec" : {
            "addons": {
              "todo": {
                "enabled": false
              },
              "ops": {
                "enabled": false
              }
            }
          }
      }]
    capabilities: Seamless Upgrades
    olm.operatorNamespace: fuseonline
    containerImage: registry.redhat.io/fuse7/fuse-online-operator
    createdAt: '2020-06-04T16:12:00Z'
    categories: Integration & Delivery
    description: >-
      Manages the installation of Fuse Online, a flexible and customizable open
      source platform that provides core integration capabilities as a service.
    olm.operatorGroup: fuseonline-fmrtj
  selfLink: >-
    /apis/operators.coreos.com/v1alpha1/namespaces/fuseonline/clusterserviceversions/fuse-online-operator.v7.7.0
  resourceVersion: '4361995'
  name: fuse-online-operator.v7.7.0
  uid: 15a087bb-511e-4fd7-8a84-011f7bad55d2
  creationTimestamp: '2020-08-07T16:35:50Z'
  generation: 1
  namespace: fuseonline
  labels:
    olm.api.b3ef997d382ec3b9: provided
spec:
  customresourcedefinitions:
    owned:
      - description: Syndesis CRD
        displayName: Syndesis CRD
        kind: Syndesis
        name: syndesises.syndesis.io
        version: v1beta1
  apiservicedefinitions: {}
  keywords:
    - camel
    - integration
    - syndesis
    - fuse
    - online
  displayName: Red Hat Integration - Fuse Online
  provider:
    name: Red Hat
  maturity: alpha
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
  version: 7.7.0
  icon:
    - base64data: >-
        PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxMDAgMTAwIj48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2Q3MWUwMDt9LmNscy0ye2ZpbGw6I2MyMWEwMDt9LmNscy0ze2ZpbGw6I2ZmZjt9LmNscy00e2ZpbGw6I2VhZWFlYTt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPnByb2R1Y3RpY29uc18xMDE3X1JHQl9JbnRlZ3JhdGlvbiBmaW5hbCBjb2xvcjwvdGl0bGU+PGcgaWQ9IkxheWVyXzEiIGRhdGEtbmFtZT0iTGF5ZXIgMSI+PGNpcmNsZSBjbGFzcz0iY2xzLTEiIGN4PSI1MCIgY3k9IjUwIiByPSI1MCIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIwLjcxIDUwKSByb3RhdGUoLTQ1KSIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTg1LjM2LDE0LjY0QTUwLDUwLDAsMCwxLDE0LjY0LDg1LjM2WiIvPjxwYXRoIGQ9Ik0zMSwzMS4zNmExLjk0LDEuOTQsMCwwLDEtMy42Mi0uODkuNDMuNDMsMCwwLDEsLjUzLS40NCwzLjMyLDMuMzIsMCwwLDAsMi44MS43QS40My40MywwLDAsMSwzMSwzMS4zNloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik03Ny42Myw0NC43NkM3Ny4xMiw0MS4zNCw3MywyMSw2Ni4zMiwyMWMtMi40NCwwLTQuNTksMy4zNS02LDYuODgtLjQ0LDEuMDYtMS4yMywxLjA4LTEuNjMsMEM1Ny4yNCwyNC4xNiw1NS44OCwyMSw1My4yOCwyMSw0My4zNCwyMSw0Ny44NCw0NS4xOCwzOSw0NS4xOGMtNC41NywwLTUuMzctMTAuNTktNS41LTE0LjcyLDIuMTkuNjUsMy4zLTEsMy41NS0yLjYxYS42My42MywwLDAsMC0uNDgtLjcyLDMuMzYsMy4zNiwwLDAsMC0zLC44OUgyNy4zMWExLDEsMCwwLDAtLjY4LjI4bC0uNTMuNTNIMjIuMjFhLjU0LjU0LDAsMCwwLS4zOC4xNmwtMy45NSwzLjk1YS41NC41NCwwLDAsMCwuMzguOTFoLjM2bDAsMEgyOS43MWMuNiw2LjI2LDEuNzUsMjIsMTYuNDIsMTcuMTlsLS4zMiw1TDQ0LjM3LDc4LjQ2YTEsMSwwLDAsMCwxLDFoNC45YTEsMSwwLDAsMCwxLTFsLS42MS0yMy4zMy0uMTUtNS44MWM2LTIuNzgsOS01LjY2LDE2LjE5LTYuNzUtMS41OSwyLjYyLTIuMDUsNi44Ny0yLjA2LDgtLjA2LDYsMi41NSw4Ljc0LDUsMTMuMjJMNjMuNzMsNzhhMSwxLDAsMCwwLC44OSwxLjMyaDQuNjRhMSwxLDAsMCwwLC45My0uNzRMNzQsNjIuNmMtNC44My03LjQzLDEuODMtMTUuMzEsMy40MS0xN0ExLDEsMCwwLDAsNzcuNjMsNDQuNzZaTTMxLDMxLjM2YTEuOTQsMS45NCwwLDAsMS0zLjYyLS44OS40My40MywwLDAsMSwuNTMtLjQ0LDMuMzIsMy4zMiwwLDAsMCwyLjgxLjdBLjQzLjQzLDAsMCwxLDMxLDMxLjM2WiIvPjxwYXRoIGNsYXNzPSJjbHMtNCIgZD0iTTQ2LjEzLDUxLjA3QzMxLjQ2LDU1LjkyLDMwLjMxLDQwLjE0LDI5LjcxLDMzLjg4SDE4LjY1TDIwLjc1LDM2YTEsMSwwLDAsMCwuNjguMjhoNmMwLDUuOCwxLjEzLDIwLjIsMTQsMjAuMmEzMS4zNCwzMS4zNCwwLDAsMCw0LjQyLS4zNVoiLz48cGF0aCBjbGFzcz0iY2xzLTQiIGQ9Ik01MC40MSw0OS4zNmwuMTUsNS44MWExMDguMiwxMDguMiwwLDAsMCwxNC00LjU0LDE5Ljc5LDE5Ljc5LDAsMCwxLDIuMDYtOEM1OS40Niw0My43LDU2LjQ0LDQ2LjU4LDUwLjQxLDQ5LjM2WiIvPjwvZz48L3N2Zz4=
      mediatype: image/svg+xml
  links:
    - name: Red Hat Fuse Online Documentation
      url: 'https://access.redhat.com/documentation/en-us/red-hat-fuse'
    - name: Upstream project Syndesis
      url: 'https://github.com/syndesisio/syndesis'
    - name: Upstream Syndesis Operator
      url: 'https://github.com/syndesisio/syndesis/tree/master/install/operator'
  install:
    spec:
      deployments:
        - name: syndesis-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: syndesis-operator
                syndesis.io/app: syndesis
                syndesis.io/component: syndesis-operator
                syndesis.io/type: operator
            strategy: {}
            template:
              metadata:
                creationTimestamp: null
                labels:
                  name: syndesis-operator
                  syndesis.io/app: syndesis
                  syndesis.io/component: syndesis-operator
                  syndesis.io/type: operator
              spec:
                containers:
                  - env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: syndesis-operator
                    image: 'registry.redhat.io/fuse7/fuse-online-operator:1.7'
                    imagePullPolicy: Always
                    name: syndesis-operator
                    ports:
                      - containerPort: 60000
                        name: metrics
                    resources: {}
                initContainers:
                  - command:
                      - bash
                      - '-c'
                      - postgres -V
                    image: 'registry.redhat.io/rhscl/postgresql-96-rhel7:latest'
                    name: postgres-version
                    resources: {}
                serviceAccountName: syndesis-operator
      permissions:
        - rules:
            - apiGroups:
                - ''
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - ''
                - project.openshift.io
              resources:
                - projects
              verbs:
                - get
            - apiGroups:
                - batch
                - extensions
              resources:
                - jobs
              verbs:
                - get
                - list
                - create
                - delete
                - update
                - watch
                - deletecollection
            - apiGroups:
                - ''
              resources:
                - pods
                - pods/exec
                - services
                - endpoints
                - persistentvolumeclaims
                - configmaps
                - secrets
                - serviceaccounts
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
            - apiGroups:
                - ''
              resources:
                - replicationcontrollers
                - replicationcontrollers/scale
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - apps
              resources:
                - daemonsets
                - deployments
                - deployments/scale
                - replicasets
                - replicasets/scale
                - statefulsets
                - statefulsets/scale
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - extensions
              resources:
                - daemonsets
                - deployments
                - deployments/scale
                - ingresses
                - networkpolicies
                - replicasets
                - replicasets/scale
                - replicationcontrollers/scale
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - ''
              resources:
                - bindings
                - events
                - limitranges
                - namespaces/status
                - pods/log
                - pods/status
                - replicationcontrollers/status
                - resourcequotas
                - resourcequotas/status
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ''
                - build.openshift.io
              resources:
                - buildconfigs
                - buildconfigs/webhooks
                - builds
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - ''
                - build.openshift.io
              resources:
                - buildconfigs/instantiate
                - buildconfigs/instantiatebinary
                - builds/clone
              verbs:
                - create
            - apiGroups:
                - ''
                - build.openshift.io
              resources:
                - builds/details
              verbs:
                - update
            - apiGroups:
                - ''
                - build.openshift.io
              resources:
                - builds/log
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ''
                - apps.openshift.io
              resources:
                - deploymentconfigs
                - deploymentconfigs/scale
                - deploymentconfigs/finalizers
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - ''
                - apps.openshift.io
              resources:
                - deploymentconfigrollbacks
                - deploymentconfigs/instantiate
                - deploymentconfigs/rollback
              verbs:
                - create
            - apiGroups:
                - ''
                - apps.openshift.io
              resources:
                - deploymentconfigs/log
                - deploymentconfigs/status
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ''
                - image.openshift.io
              resources:
                - imagestreams
                - imagestreamimages
                - imagestreammappings
                - imagestreams/secrets
                - imagestreamtags
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - ''
                - image.openshift.io
              resources:
                - imagestreamimports
              verbs:
                - create
            - apiGroups:
                - ''
                - image.openshift.io
              resources:
                - imagestreams/status
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - ''
                - template.openshift.io
              resources:
                - processedtemplates
                - templateconfigs
                - templateinstances
                - templates
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - ''
                - build.openshift.io
              resources:
                - buildlogs
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - syndesis.io
              resources:
                - '*'
                - '*/finalizers'
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
            - apiGroups:
                - ''
              resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - configmaps
                - secrets
                - serviceaccounts
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
            - apiGroups:
                - ''
              resources:
                - pods/log
              verbs:
                - get
            - apiGroups:
                - ''
              resources:
                - replicationcontrollers
                - replicationcontrollers/scale
                - replicationcontrollers/status
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
            - apiGroups:
                - ''
                - build.openshift.io
              resources:
                - builds
                - buildconfigs
                - builds/details
                - buildconfigs/webhooks
                - buildconfigs/instantiatebinary
                - builds/log
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
            - apiGroups:
                - ''
                - apps.openshift.io
              resources:
                - deploymentconfigs
                - deploymentconfigs/scale
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - ''
                - apps.openshift.io
              resources:
                - deploymentconfigrollbacks
                - deploymentconfigs/instantiate
                - deploymentconfigs/rollback
              verbs:
                - create
            - apiGroups:
                - ''
                - apps.openshift.io
              resources:
                - deploymentconfigs/log
                - deploymentconfigs/status
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ''
                - image.openshift.io
              resources:
                - imagestreams
                - imagestreamimages
                - imagestreammappings
                - imagestreams/secrets
                - imagestreamtags
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - ''
                - image.openshift.io
              resources:
                - imagestreams/status
                - imagestreamimports
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ''
              resources:
                - events
              verbs:
                - get
                - list
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - roles
                - rolebindings
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
            - apiGroups:
                - ''
                - template.openshift.io
              resources:
                - processedtemplates
                - templateconfigs
                - templateinstances
                - templates
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - authorization.openshift.io
              resources:
                - roles
                - rolebindings
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
                - routes/custom-host
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
                - patch
            - apiGroups:
                - camel.apache.org
              resources:
                - '*'
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - alertmanagers
                - prometheuses
                - servicemonitors
                - prometheusrules
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
            - apiGroups:
                - integreatly.org
              resources:
                - grafanadashboards
              verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - watch
            - apiGroups:
                - ''
              resources:
                - services
                - services/finalizers
              verbs:
                - list
                - get
                - watch
                - create
                - update
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - apps
              resources:
                - deployments/finalizers
              verbs:
                - update
            - apiGroups:
                - serving.knative.dev
              resources:
                - services
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - eventing.knative.dev
              resources:
                - channels
              verbs:
                - get
                - list
                - watch
          serviceAccountName: syndesis-operator
    strategy: deployment
  maintainers:
    - email: janstey@redhat.com
      name: Jon Anstey
  description: >

    Fuse Online is a flexible and customizable, open source platform that
    provides core integration capabilities as a service.


    This operator installs as well as configures the following Fuse Online
    components:

    - syndesis-server

    - syndesis-meta

    - syndesis-ui

    - syndesis-db

    - syndesis-prometheus

    - syndesis-proxy

    - syndesis-oauthproxy


    ### Before you begin

    You must configure authentication to Red Hat container registry before you
    can import and use the Red Hat Fuse OpenShift Image Streams. Follow
    instruction given below to configure the registration to container registry.


    1. Log in to the OpenShift Server as an administrator, as follow:
        ```
        oc login -u system:admin
        ```
    2. Log in to the OpenShift project where you will be installing the
    operator.
        ```
        oc project fuse-online
        ```
    3. Create a docker-registry secret using either Red Hat Customer Portal
    account or Red Hat Developer Program account credentials.
        ```
        oc create secret docker-registry syndesis-pull-secret \
          --docker-server=registry.redhat.io \
          --docker-username=CUSTOMER_PORTAL_USERNAME \
          --docker-password=CUSTOMER_PORTAL_PASSWORD \
          --docker-email=EMAIL_ADDRESS
        ```
        NOTE: You need to create a docker-registry secret in every new namespace where the image streams reside and which use registry.redhat.io.

        If you do not wish to use your Red Hat account username and password to create the secret, it is recommended to create an authentication token using a [registry service account](https://access.redhat.com/terms-based-registry/).

    ### How to install

    - When the operator is installed (you have created a subscription and the
    operator is running in the selected namespace) and before you create a new
    CR of Kind Syndesis, you have to link the secret created in the previous
    section to the operator service account.

    ```

    oc secrets link syndesis-operator syndesis-pull-secret --for=pull

    ```


    - Create a new CR of Kind Syndesis (click the Create New button). The CR
    spec contains all defaults (see below).


    ### CR Defaults

    The CR definition is pretty simple and an empy CR will trigger a base
    installation.


    Within the addons section, users are able to enable specific addons. The
    available addons at the moment are:

    - dv: enables the data integration capabilities

    - camelk: enables kamelk

    - jaeger: enable jaeger

    - ops: enables monitoring, requires extra CRDs

    - todo: a simple todo application


    - When you enable Jaeger addon, you should link the previously created
    `syndesis-pull-secret` secret to jaeger service accounts.

    ```

    oc secrets link jaeger-operator syndesis-pull-secret --for=pull

    oc secrets link syndesis-jaeger-ui-proxy syndesis-pull-secret --for=pull

    ```


    To enable addons, set "addon_name": {"enabled": true} in the CR.


    For a more detailed set of instructions and a complete reference of config
    options, 

    please refer to the product documentation at
    https://access.redhat.com/documentation/en-us/red_hat_fuse
  selector:
    matchLabels:
      name: syndesis-operator
  labels:
    name: syndesis-operator
status:
  conditions:
    - lastTransitionTime: '2020-08-07T16:35:50Z'
      lastUpdateTime: '2020-08-07T16:35:50Z'
      message: requirements not yet checked
      phase: Pending
      reason: RequirementsUnknown
    - lastTransitionTime: '2020-08-07T16:35:50Z'
      lastUpdateTime: '2020-08-07T16:35:50Z'
      message: one or more requirements couldn't be found
      phase: Pending
      reason: RequirementsNotMet
    - lastTransitionTime: '2020-08-07T16:35:52Z'
      lastUpdateTime: '2020-08-07T16:35:52Z'
      message: 'all requirements found, attempting install'
      phase: InstallReady
      reason: AllRequirementsMet
    - lastTransitionTime: '2020-08-07T16:35:52Z'
      lastUpdateTime: '2020-08-07T16:35:52Z'
      message: waiting for install components to report healthy
      phase: Installing
      reason: InstallSucceeded
    - lastTransitionTime: '2020-08-07T16:35:52Z'
      lastUpdateTime: '2020-08-07T16:35:53Z'
      message: >
        installing: waiting for deployment syndesis-operator to become ready:
        Waiting for rollout to finish: 0 of 1 updated replicas are available...
      phase: Installing
      reason: InstallWaiting
    - lastTransitionTime: '2020-08-07T16:36:10Z'
      lastUpdateTime: '2020-08-07T16:36:10Z'
      message: install strategy completed with no errors
      phase: Succeeded
      reason: InstallSucceeded
  lastTransitionTime: '2020-08-07T16:36:10Z'
  lastUpdateTime: '2020-08-07T16:36:10Z'
  message: install strategy completed with no errors
  phase: Succeeded
  reason: InstallSucceeded
  requirementStatus:
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: syndesises.syndesis.io
      status: Present
      uuid: 31725066-60c5-4705-93e3-6ee27f2c3ec6
      version: v1beta1
    - dependents:
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get"],"apiGroups":[""],"resources":["namespaces"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get"],"apiGroups":["","project.openshift.io"],"resources":["projects"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","delete","update","watch","deletecollection"],"apiGroups":["batch","extensions"],"resources":["jobs"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch"],"apiGroups":[""],"resources":["pods","pods/exec","services","endpoints","persistentvolumeclaims","configmaps","secrets","serviceaccounts"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":[""],"resources":["replicationcontrollers","replicationcontrollers/scale"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":["apps"],"resources":["daemonsets","deployments","deployments/scale","replicasets","replicasets/scale","statefulsets","statefulsets/scale"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":["extensions"],"resources":["daemonsets","deployments","deployments/scale","ingresses","networkpolicies","replicasets","replicasets/scale","replicationcontrollers/scale"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch"],"apiGroups":[""],"resources":["bindings","events","limitranges","namespaces/status","pods/log","pods/status","replicationcontrollers/status","resourcequotas","resourcequotas/status"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":["","build.openshift.io"],"resources":["buildconfigs","buildconfigs/webhooks","builds"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["create"],"apiGroups":["","build.openshift.io"],"resources":["buildconfigs/instantiate","buildconfigs/instantiatebinary","builds/clone"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["update"],"apiGroups":["","build.openshift.io"],"resources":["builds/details"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch"],"apiGroups":["","build.openshift.io"],"resources":["builds/log"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":["","apps.openshift.io"],"resources":["deploymentconfigs","deploymentconfigs/scale","deploymentconfigs/finalizers"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["create"],"apiGroups":["","apps.openshift.io"],"resources":["deploymentconfigrollbacks","deploymentconfigs/instantiate","deploymentconfigs/rollback"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch"],"apiGroups":["","apps.openshift.io"],"resources":["deploymentconfigs/log","deploymentconfigs/status"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":["","image.openshift.io"],"resources":["imagestreams","imagestreamimages","imagestreammappings","imagestreams/secrets","imagestreamtags"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["create"],"apiGroups":["","image.openshift.io"],"resources":["imagestreamimports"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch"],"apiGroups":["","image.openshift.io"],"resources":["imagestreams/status"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":["route.openshift.io"],"resources":["routes"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":["","template.openshift.io"],"resources":["processedtemplates","templateconfigs","templateinstances","templates"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":["","build.openshift.io"],"resources":["buildlogs"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch"],"apiGroups":["syndesis.io"],"resources":["*","*/finalizers"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch"],"apiGroups":[""],"resources":["pods","services","endpoints","persistentvolumeclaims","configmaps","secrets","serviceaccounts"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get"],"apiGroups":[""],"resources":["pods/log"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch"],"apiGroups":[""],"resources":["replicationcontrollers","replicationcontrollers/scale","replicationcontrollers/status"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch"],"apiGroups":["","build.openshift.io"],"resources":["builds","buildconfigs","builds/details","buildconfigs/webhooks","buildconfigs/instantiatebinary","builds/log"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":["","apps.openshift.io"],"resources":["deploymentconfigs","deploymentconfigs/scale"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["create"],"apiGroups":["","apps.openshift.io"],"resources":["deploymentconfigrollbacks","deploymentconfigs/instantiate","deploymentconfigs/rollback"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch"],"apiGroups":["","apps.openshift.io"],"resources":["deploymentconfigs/log","deploymentconfigs/status"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":["","image.openshift.io"],"resources":["imagestreams","imagestreamimages","imagestreammappings","imagestreams/secrets","imagestreamtags"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch"],"apiGroups":["","image.openshift.io"],"resources":["imagestreams/status","imagestreamimports"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list"],"apiGroups":[""],"resources":["events"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch"],"apiGroups":["rbac.authorization.k8s.io"],"resources":["roles","rolebindings"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":["","template.openshift.io"],"resources":["processedtemplates","templateconfigs","templateinstances","templates"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch"],"apiGroups":["authorization.openshift.io"],"resources":["roles","rolebindings"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch","patch"],"apiGroups":["route.openshift.io"],"resources":["routes","routes/custom-host"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch"],"apiGroups":["camel.apache.org"],"resources":["*"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch"],"apiGroups":["monitoring.coreos.com"],"resources":["alertmanagers","prometheuses","servicemonitors","prometheusrules"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","create","update","delete","deletecollection","watch"],"apiGroups":["integreatly.org"],"resources":["grafanadashboards"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["list","get","watch","create","update"],"apiGroups":[""],"resources":["services","services/finalizers"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","create"],"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["update"],"apiGroups":["apps"],"resources":["deployments/finalizers"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch"],"apiGroups":["serving.knative.dev"],"resources":["services"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","list","watch"],"apiGroups":["eventing.knative.dev"],"resources":["channels"]}
          status: Satisfied
          version: v1beta1
      group: ''
      kind: ServiceAccount
      message: ''
      name: syndesis-operator
      status: Present
      version: v1
