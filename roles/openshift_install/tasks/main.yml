---
- name: install Noobaa
  import_role:
    name: noobaa_install
  vars:
    namespace: "{{ namespace_noobaa_operator }}"
    resources_dir: "{{ resources_base_dir }}/noobaa-install"
    work_dir_name: noobaa
  when: noobaa_install

- name: install 3scale
  import_role:
    name: 3scale_install
  vars:
    namespace: "{{ namespace_threescale_operator }}"
    resources_dir: "{{ resources_base_dir }}/3scale-install"
    work_dir_name: 3scale
  when: threescale_install

- name: install API Designer
  import_role:
    name: apicurito_install
  vars:
    namespace: "{{ namespace_apicurito_operator }}"
    resources_dir: "{{ resources_base_dir }}/apicurito-install"
    work_dir_name: apicurito
  when: apicurito_install

- name: install CodeReady Workspaces
  import_role:
    name: codeready_install
  vars:
    namespace: "{{ namespace_codeready_operator }}"
    resources_dir: "{{ resources_base_dir }}/codeready-install"
    work_dir_name: codeready
  when: codeready_install

- name: install Fuse Online
  import_role:
    name: fuseonline_install
  vars:
    namespace: "{{ namespace_fuseonline_operator }}"
    resources_dir: "{{ resources_base_dir }}/fuseonline-install"
    work_dir_name: fuseonline
  when: fuseonline_install

- name: install AMQ Streams
  import_role:
    name: amqstreams_install
  vars:
    namespace: "{{ namespace_amqstreams_operator }}"
    resources_dir: "{{ resources_base_dir }}/amqstreams-install"
    work_dir_name: amqstreams
  when: amqstreams_install

- name: install MySQL
  import_role:
    name: mysql_install
  vars:
    namespace: "{{ namespace_mysql }}"
    resources_dir: "{{ resources_base_dir }}/mysql-install"
    work_dir_name: mysql
  when: mysql_install

- name: install SSO
  import_role:
    name: sso_install
  vars:
    namespace: "{{ namespace_sso_operator }}"
    resources_dir: "{{ resources_base_dir }}/sso-install"
    work_dir_name: sso
  when: sso_install  

- name: install Microcks
  import_role:
    name: microcks_install
  vars:
    namespace: "{{ namespace_microcks_operator }}"
    resources_dir: "{{ resources_base_dir }}/microcks-install"
    work_dir_name: microcks
  when: microcks_install    


#
#- name: assign user {{ cluster_provisioner }} as project admin in namespace sso
#  oc_adm_policy_user:
#    state: present
#    oc_binary: "{{ openshift_cli }}"
#    resource_kind: role
#    user: "{{ cluster_provisioner }}"
#    namespace: "{{ namespace_sso }}"
#    rolebinding_name: "{{ cluster_provisioner }}-admin"
#    resource_name: admin
